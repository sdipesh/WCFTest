# This is a basic workflow to help you get started with Actions

name: Build and Deploy Windows Container App to Azure App Service

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted    

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Authenticate a Service Principal to deploy to your Web App
      - name: Azure Service Principal Authentication
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Use docker login to log into ACR 
      - name: Docker login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and push your image to Azure Container Registry 
      - name: Build and Push container to ACR
        run: |     
          docker build --file=TestWcfService/Dockerfile -t ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/${{ secrets.IMAGE_USERNAME }}:${{ github.sha }}

      # Deploy your container to App Service 
      - name: Deploy Container to Azure App Service
        uses: azure/webapps-container-deploy@v1
        with:
          app-name: ${{ secrets.APP_NAME }}
          images: ${{ secrets.REGISTRY_USERNAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
